(()=>{"use strict";const t=function(){const t={};return{subscribe:function(e,n){t.hasOwnProperty(e)?t[e].push(n):t[e]=[n]},publish:function(e,n){if(t.hasOwnProperty(e))for(const o of t[e])o(n)},unsubscribe:function(e,n){if(t.hasOwnProperty(e)){const o=t[e].indexOf(n);o>=0&&t[e].splice(o,1)}}}}(),e=function(t,e,n=[]){return{getId:function(){return t},deleteTodo:function(t){const e=n.indexOf(t);return e>=0&&n.splice(e,1),e},addTodo:function(t){return n.includes(t)?null:(n.push(t),t)},name:e,getTodoIdList:function(){return n}}},n="todoList",o="projectList",i="todoID",c="projectID",d=function(){let n=0;const i="0";let d=[],s=i;function a(){!function(t){const e=JSON.stringify(t);localStorage.setItem(o,e)}(d.map((t=>({id:t.getId(),todoIdList:t.getTodoIdList(),...t}))))}function r(t){return d.find((e=>e.getId()===t))}function l(e){s=e;let n=r(e),o=n.getTodoIdList();t.publish("selectTodos",{todoIdList:o,name:n.name}),t.publish("projectSelected",e)}function u(n="Inbox",o=[]){const c=e(i,n,o);d.push(c),t.publish("defaultAdded",{defaultProjectId:i,name:n}),a()}return{createProject:function(o){n+=1;const i=e(`${n}`,o);return d.push(i),t.publish("projectCreated",{name:o,projectId:`${n}`}),a(),function(t){const e=JSON.stringify(t);localStorage.setItem(c,e)}(n),i.getId()},deleteProject:function(e){const n=d.findIndex((t=>t.getId()===e)),o=d.splice(n,1)[0];t.publish("projectDeleted",{id:e,todoIdList:o.getTodoIdList()}),e===s&&l(i),a()},getProject:r,assignTodoToProject:function(t,e){r(t).addTodo(e),a()},selectProject:l,createDefaultProject:u,getDefaultProjectId:function(){return i},getProjects:function(){return d},getCurrentProject:function(){return s},removeTodoFromProject:function(t){for(let e of d)e.deleteTodo(t);a()},initialize:function(){(function(){const n=JSON.parse(localStorage.getItem(o));if(n)for(let{id:o,todoIdList:c,name:s}of n){let n=e(o,s,c);d.push(n),o===i?t.publish("defaultAdded",{defaultProjectId:i,name:s}):t.publish("projectCreated",{name:s,projectId:`${o}`})}})(),function(){const t=JSON.parse(localStorage.getItem(c));t&&(n=parseInt(t))}(),r(i)||u(),l(i)}}}(),s=function(){function e(t){const e=d.createProject(t);d.selectProject(e)}function n(t){d.deleteProject(t)}function o(t){d.selectProject(t)}function i(){let e=d.getProjects().map((({name:t,getId:e})=>({name:t,id:e()}))),n=d.getCurrentProject();t.publish("todoFormDataSent",{selectedId:n,projectList:e})}function c({project:t,todo:e}){d.assignTodoToProject(t,e),d.selectProject(t)}function s(t){d.removeTodoFromProject(t)}return{initialize:function(){t.subscribe("createProject",e),t.subscribe("deleteProject",n),t.subscribe("selectProject",o),t.subscribe("todoFormDataRequired",i),t.subscribe("todoCreated",c),d.initialize(),t.subscribe("todoDeleted",s)}}}(),a=function(t,e,n,o=null){const i=document.createElement("li");i.classList.add("project-item"),i.dataset.id=t;const c=document.createElement("h3");if(c.textContent=e,o){const t=document.createElement("button");t.classList.add("danger-btn"),t.textContent="-",t.onclick=o,i.append(c,t)}else i.append(c);return i.onclick=n,i},r=function(){let e,n,o;function i(e){if(e.stopPropagation(),"BUTTON"===e.target.nodeName)return;const n=e.target.closest("[data-id]").dataset.id;t.publish("selectProject",n)}function c(e){const n=e.target.closest("[data-id]")?.dataset.id;t.publish("deleteProject",n)}function d({name:e,projectId:n}){const d=a(n,e,i,c);o.append(d),t.publish("selectProject",n)}function s({id:t}){[...o.children].find((e=>e.dataset.id===t))?.remove()}function r(){t.publish("showProjectForm")}function l(t){!function(t){for(let e of o.children)e.dataset.id===t?e.classList.add("selected"):e.classList.remove("selected")}(t)}function u(){!function(){for(;o.firstChild;)o.firstChild.remove()}();const t=document.createElement("div");t.classList.add("projects-nav-header");const e=document.createElement("button");e.classList.add("success-btn"),e.textContent="+",e.onclick=r;const i=document.createElement("h2");i.textContent="Projects",t.append(i,e),n.append(t,o)}return{initialize:function(i){t.subscribe("projectCreated",d),t.subscribe("projectDeleted",s),t.subscribe("projectSelected",l),e=i,n=document.createElement("nav"),n.id="projects-nav",n.classList.add("projects-nav"),o=document.createElement("ul"),o.classList.add("project-list"),e.append(n),u()},render:u}}(),l=function(){let e,n,o;function i(e){if(e.stopPropagation(),"BUTTON"===e.target.nodeName)return;const n=e.target.closest("[data-id]").dataset.id;t.publish("selectProject",n)}function c({defaultProjectId:t,name:e}){const n=a(t,e,i);o.append(n)}function d(t){!function(t){for(let e of o.children)e.dataset.id===t?e.classList.add("selected"):e.classList.remove("selected")}(t)}return{initialize:function(i){t.subscribe("defaultAdded",c),t.subscribe("projectSelected",d),e=i,n=document.createElement("nav"),n.id="default-nav",n.classList.add("default-nav"),o=document.createElement("ul"),o.classList.add("default-list"),n.append(o),e.append(n),function(){for(;o.firstChild;)o.firstChild.remove()}()}}}(),u=function(){let e,n,o;function i(e){const n=e.target.closest("[data-filter]"),o=n.dataset.filterType,i=n.dataset.filter;t.publish("filterTodo",{type:o,filterValue:i}),t.publish("projectSelected",i)}function c(t){for(let e of o.children)e.dataset.filter===t?e.classList.add("selected"):e.classList.remove("selected")}function d(){!function(){for(;n.firstChild;)n.firstChild.remove()}(),l.initialize(n),function(){const t=function(t,e,n,o){const i=document.createElement("li");i.classList.add("filter-item"),i.dataset.filterType=e,i.dataset.filter=n,i.onclick=o;const c=document.createElement("h3");return c.textContent=t,i.appendChild(c),i}("Today","date","today",i);o.append(t),n.appendChild(o)}(),r.initialize(n)}return{initialize:function(i){t.subscribe("projectSelected",c),e=i,n=function(){const t=document.createElement("nav");return t.id="sidebar",t.classList.add("sidebar"),t}(),o=document.createElement("ul"),o.classList.add("filter-list"),e.appendChild(n),d()},render:d}}(),m=["blue","red","yellow","pink"],f=function(t,e,n,o,i,c,d="",s=null,a=!1){const r=document.createElement("li");r.classList.add("todo-item"),r.dataset.id=t;const l=document.createElement("div");l.classList.add("todo-header");const u=document.createElement("button");u.type="button",u.classList.add("complete-toggle-btn"),u.textContent="âœ“",a&&u.classList.add("completed"),u.onclick=n;const f=document.createElement("h3");f.textContent=e,f.classList.add("todo-title");const p=document.createElement("button");p.type="button",p.textContent="Edit",p.classList.add("success-btn"),p.onclick=i;const b=document.createElement("button");b.type="button",b.textContent="-",b.classList.add("danger-btn"),b.onclick=o;for(let[t,e]of m.entries())`${t}`===c&&r.style.setProperty("--priority-color",e);const g=document.createElement("p");g.classList.add("description"),g.textContent=d;const h=document.createElement("h4");return s&&(h.textContent=s),h.classList.add("date"),l.append(u,f,p,b),r.append(l,g,h),r},p=function(){let e,n,o,i,c,d,s;function a(){c?.remove(),s?.remove(),d.classList.remove("hidden");for(let t of o.children)t.classList.remove("hidden")}function r(e){const n=e.target,o=n.closest("[data-id]").dataset.id;n.classList.toggle("completed"),t.publish("toggleCompletion",o)}function l(e){const n=e.target.closest("[data-id]").dataset.id;t.publish("deleteTodo",n)}function u(e){const n=e.target.closest("[data-id]").dataset.id;t.publish("requestTodoData",n)}function p({name:t,filteredList:e}){!function(){for(;o.firstChild;)o.firstChild.remove()}(),e=e.map((({getId:t,title:e,priority:n,desc:o,dueDate:i,complete:c})=>f(t(),e,r,l,u,n,o,i,c))),o.append(...e),i.textContent=t,a()}function b({selectedId:e,projectList:o}){a(),c=function(e,n,o){const i=document.createElement("form");i.classList.add("add-todo-form");const c=document.createElement("div");c.classList.add("text-data");const d=document.createElement("input");d.classList.add("todo-title"),d.type="text",d.required=!0,d.name="title",d.placeholder="Task that must be completed";const s=document.createElement("textarea");s.classList.add("description"),s.name="desc",s.placeholder="Description...";const a=document.createElement("div");a.classList.add("meta-data");const r=document.createElement("input");r.classList.add("date"),r.type="date",r.name="date";const l=document.createElement("select");l.classList.add("dropdown-project"),l.name="project";for(let t of e){const e=document.createElement("option");e.value=t.id,e.textContent=t.name,t.id===n&&(e.selected=!0),l.appendChild(e)}const u=document.createElement("select");u.classList.add("dropdown-priority"),u.name="priority";for(let[t,e]of m.entries()){const e=document.createElement("option");e.value=`${t}`,e.textContent=`Priority ${t+1}`,t+1===m.length&&(e.selected=!0),u.appendChild(e)}const f=document.createElement("div");f.classList.add("button-container");const p=document.createElement("button");p.classList.add("success-btn"),p.type="submit",p.textContent="Add";const b=document.createElement("button");return b.classList.add("danger-btn"),b.type="button",b.textContent="Cancel",b.onclick=o,c.append(d,s),a.append(r,l,u),f.append(p,b),i.onsubmit=function(e){e.preventDefault();const{title:n,desc:c,date:d,project:s,priority:a}=i.elements,r={title:n.value,desc:c.value,date:d.value,project:s.value,priority:a.value};t.publish("createTodo",r),o()},i.append(c,a,f),i}(o,e,a),n.append(c),d.classList.add("hidden"),c.elements.title.focus()}function g(e){e.preventDefault();const{title:n,desc:o,date:i,priority:c}=s.elements,d={id:s.dataset.editId,title:n.value,desc:o.value,date:i.value,priority:c.value};t.publish("editTodo",d)}function h({title:t,getId:e,desc:n,dueDate:i,priority:c}){a(),s=function({title:t,id:e,desc:n,dueDate:o,priority:i},c,d){const s=document.createElement("form");s.classList.add("edit-todo-form"),s.dataset.editId=e,s.onsubmit=c;const a=document.createElement("div");a.classList.add("text-data");const r=document.createElement("input");r.classList.add("todo-title"),r.type="text",r.required=!0,r.name="title",r.value=t,r.placeholder="Task that must be completed";const l=document.createElement("textarea");l.classList.add("description"),l.name="desc",l.value=n,l.placeholder="Description...";const u=document.createElement("div");u.classList.add("meta-data");const f=document.createElement("input");f.type="date",f.name="date",f.value=o;const p=document.createElement("select");p.classList.add("dropdown-priority"),p.name="priority";for(let[t,e]of m.entries()){const e=document.createElement("option");e.value=`${t}`,e.textContent=`Priority ${t+1}`,`${t}`===i&&(e.selected=!0),p.appendChild(e)}const b=document.createElement("div");b.classList.add("button-container");const g=document.createElement("button");g.classList.add("success-btn"),g.type="submit",g.textContent="Edit";const h=document.createElement("button");return h.classList.add("danger-btn"),h.type="button",h.textContent="Cancel",h.onclick=d,a.append(r,l),u.append(f,p),b.append(g,h),s.onsubmit=c,s.append(a,u,b),s}({title:t,id:e(),desc:n,dueDate:i,priority:c},g,a);const r=[...o.children].findIndex((t=>t.dataset.id===e())),l=o.children[r];o.insertBefore(s,l),l.classList.add("hidden"),d.classList.add("hidden"),s.elements.title.focus()}function v(e){t.publish("todoFormDataRequired",null)}function L(t){[...o.children].find((e=>e.dataset.id===t))?.remove()}function j({id:t,title:e,desc:n,dueDate:i,priority:c,complete:d}){const s=[...o.children].find((e=>e.dataset.id===t));if(s){const a=f(t,e,r,l,u,c,n,i,d);o.replaceChild(a,s)}a()}return{initialize:function(c){e=c,n=document.createElement("main"),i=document.createElement("h2"),o=document.createElement("ul"),o.classList.add("todo-list"),d=document.createElement("button"),d.classList.add("add-todo-btn"),d.type="button",d.textContent="Add Todo",d.onclick=v,n.append(i,o,d),e.append(n),t.subscribe("todosSelected",p),t.subscribe("todoFormDataSent",b),t.subscribe("todoDeleted",L),t.subscribe("todoDataSent",h),t.subscribe("todoEdited",j)}}}(),b=function(t,e,n=null,o=null,i=null,c=null,d=!1){return{title:e,desc:n,dueDate:o,priority:i,notes:c,complete:d,getId:function(){return t}}};function g(t){if(null===t||!0===t||!1===t)return NaN;var e=Number(t);return isNaN(e)?e:e<0?Math.ceil(e):Math.floor(e)}function h(t,e){if(e.length<t)throw new TypeError(t+" argument"+(t>1?"s":"")+" required, but only "+e.length+" present")}var v=36e5,L={dateTimeDelimiter:/[T ]/,timeZoneDelimiter:/[Z ]/i,timezone:/([Z+-].*)$/},j=/^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/,y=/^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/,C=/^([+-])(\d{2})(?::?(\d{2}))?$/;function E(t){var e,n={},o=t.split(L.dateTimeDelimiter);if(o.length>2)return n;if(/:/.test(o[0])?(n.date=null,e=o[0]):(n.date=o[0],e=o[1],L.timeZoneDelimiter.test(n.date)&&(n.date=t.split(L.timeZoneDelimiter)[0],e=t.substr(n.date.length,t.length))),e){var i=L.timezone.exec(e);i?(n.time=e.replace(i[1],""),n.timezone=i[1]):n.time=e}return n}function T(t,e){var n=new RegExp("^(?:(\\d{4}|[+-]\\d{"+(4+e)+"})|(\\d{2}|[+-]\\d{"+(2+e)+"})$)"),o=t.match(n);if(!o)return{year:null};var i=o[1]&&parseInt(o[1]),c=o[2]&&parseInt(o[2]);return{year:null==c?i:100*c,restDateString:t.slice((o[1]||o[2]).length)}}function D(t,e){if(null===e)return null;var n=t.match(j);if(!n)return null;var o=!!n[4],i=I(n[1]),c=I(n[2])-1,d=I(n[3]),s=I(n[4]),a=I(n[5])-1;if(o)return function(t,e,n){return e>=1&&e<=53&&n>=0&&n<=6}(0,s,a)?function(t,e,n){var o=new Date(0);o.setUTCFullYear(t,0,4);var i=7*(e-1)+n+1-(o.getUTCDay()||7);return o.setUTCDate(o.getUTCDate()+i),o}(e,s,a):new Date(NaN);var r=new Date(0);return function(t,e,n){return e>=0&&e<=11&&n>=1&&n<=(S[e]||(w(t)?29:28))}(e,c,d)&&function(t,e){return e>=1&&e<=(w(t)?366:365)}(e,i)?(r.setUTCFullYear(e,c,Math.max(i,d)),r):new Date(NaN)}function I(t){return t?parseInt(t):1}function P(t){var e=t.match(y);if(!e)return null;var n=N(e[1]),o=N(e[2]),i=N(e[3]);return function(t,e,n){return 24===t?0===e&&0===n:n>=0&&n<60&&e>=0&&e<60&&t>=0&&t<25}(n,o,i)?n*v+6e4*o+1e3*i:NaN}function N(t){return t&&parseFloat(t.replace(",","."))||0}function x(t){if("Z"===t)return 0;var e=t.match(C);if(!e)return 0;var n="+"===e[1]?-1:1,o=parseInt(e[2]),i=e[3]&&parseInt(e[3])||0;return function(t,e){return e>=0&&e<=59}(0,i)?n*(o*v+6e4*i):NaN}var S=[31,null,31,30,31,30,31,31,30,31,30,31];function w(t){return t%400==0||t%4==0&&t%100}function z(t){h(1,arguments);var e=Object.prototype.toString.call(t);return t instanceof Date||"object"==typeof t&&"[object Date]"===e?new Date(t.getTime()):"number"==typeof t||"[object Number]"===e?new Date(t):("string"!=typeof t&&"[object String]"!==e||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule"),console.warn((new Error).stack)),new Date(NaN))}function O(t){h(1,arguments);var e=z(t);return e.setHours(0,0,0,0),e}function $(t,e){h(2,arguments);var n=O(t),o=O(e);return n.getTime()===o.getTime()}function k(t){return h(1,arguments),$(t,Date.now())}const U=function(){let e=[],o=[],c=0;function d(){!function(t){const e=JSON.stringify(t);localStorage.setItem(n,e)}(e.map((t=>({id:t.getId(),...t}))))}function s(t){return e.find((e=>e.getId()===t))}function a(t){return e.filter((e=>t.includes(e.getId())))}return{createTodo:function(n,o,s=null,a=null,r=null,l=null,u=!1){c+=1;const m=b(`${c}`,n,s,a,r,l,u);e.push(m),t.publish("todoCreated",{project:o,todo:m.getId()}),d(),function(t){const e=JSON.stringify(t);localStorage.setItem(i,e)}(c)},getTodo:s,removeTodo:function(n){const o=e.findIndex((t=>t.getId()===n));return o>=0&&(e.splice(o,1),t.publish("todoDeleted",n),d()),o},editTodo:function(e,n){const o=s(e);o&&(Object.assign(o,n),t.publish("todoEdited",{id:e,...o}),d())},getTodosFromIdList:a,filterList:function(e,n){o=a(n),t.publish("todosSelected",{name:e,filteredList:o})},toggleCompletion:function(t){const e=s(t);e.complete=!e.complete,d()},initialize:function(){(function(){const t=JSON.parse(localStorage.getItem(n));if(t)for(let{id:n,title:o,desc:i,dueDate:c,priority:d,notes:s,complete:a}of t){const t=b(`${n}`,o,i,c,d,s,a);e.push(t)}})(),function(){const t=JSON.parse(localStorage.getItem(i));t&&(c=t)}()},filterByDate:function(n){var i;"today"===n&&(i=k,o=e.filter((({dueDate:t})=>i(function(t,e){h(1,arguments);var n=e||{},o=null==n.additionalDigits?2:g(n.additionalDigits);if(2!==o&&1!==o&&0!==o)throw new RangeError("additionalDigits must be 0, 1 or 2");if("string"!=typeof t&&"[object String]"!==Object.prototype.toString.call(t))return new Date(NaN);var i,c=E(t);if(c.date){var d=T(c.date,o);i=D(d.restDateString,d.year)}if(isNaN(i)||!i)return new Date(NaN);var s,a=i.getTime(),r=0;if(c.time&&(r=P(c.time),isNaN(r)||null===r))return new Date(NaN);if(!c.timezone){var l=new Date(a+r),u=new Date(0);return u.setFullYear(l.getUTCFullYear(),l.getUTCMonth(),l.getUTCDate()),u.setHours(l.getUTCHours(),l.getUTCMinutes(),l.getUTCSeconds(),l.getUTCMilliseconds()),u}return s=x(c.timezone),isNaN(s)?new Date(NaN):new Date(a+r+s)}(t))))),t.publish("todosSelected",{name:n.toUpperCase(),filteredList:o})}}}(),F=function(){function e({todoIdList:t,name:e}){U.filterList(e,t)}function n({title:t,desc:e,date:n,project:o,priority:i}){U.createTodo(t,o,e,n,i)}function o(t){U.toggleCompletion(t)}function i(t){U.removeTodo(t)}function c({todoIdList:t}){for(let e of t)U.removeTodo(e)}function d(e){const n=U.getTodo(e);n&&t.publish("todoDataSent",n)}function s({id:t,title:e,desc:n,date:o,priority:i}){U.editTodo(t,{title:e,desc:n,dueDate:o,priority:i})}function a({type:t,filterValue:e}){"date"===t&&U.filterByDate(e)}return{initialize:function(){t.subscribe("selectTodos",e),t.subscribe("createTodo",n),t.subscribe("toggleCompletion",o),t.subscribe("deleteTodo",i),t.subscribe("requestTodoData",d),t.subscribe("editTodo",s),t.subscribe("projectDeleted",c),U.initialize(),t.subscribe("filterTodo",a)}}}();!function(e){const n=function(){const e=document.createElement("div"),n=document.createElement("form");function o(){e.classList.add("hidden")}e.classList.add("overlay","project-form-overlay","hidden"),n.onsubmit=function(e){e.preventDefault();const i=n.elements.name.value;n.elements.name.value="",o(),t.publish("createProject",i)},n.classList.add("project-form");const i=document.createElement("h2");i.textContent="Create Project",i.classList.add("project-form-header");const c=document.createElement("input");c.type="text",c.placeholder="Project name",c.name="name",c.required="true";const d=document.createElement("button");d.type="submit",d.textContent="Add",d.classList.add("success-btn");const s=document.createElement("button");s.type="button",s.onclick=o,s.textContent="Cancel",s.classList.add("danger-btn");const a=document.createElement("div");return a.classList.add("project-form-buttons"),a.append(s,d),n.append(i,c,a),e.appendChild(n),e}();e.append(n),t.subscribe("showProjectForm",(function(){n.classList.remove("hidden"),n.querySelector("form")?.elements.name.focus()})),u.initialize(e),p.initialize(e),F.initialize(),s.initialize()}(document.getElementById("content"))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,